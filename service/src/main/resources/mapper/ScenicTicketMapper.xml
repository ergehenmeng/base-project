<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eghm.mapper.ScenicTicketMapper">

    <select id="getByPage" parameterType="com.eghm.dto.business.scenic.ticket.ScenicTicketQueryRequest" resultType="com.eghm.vo.business.scenic.ticket.ScenicTicketResponse">
        select
        t.id,
        t.title,
        t.scenic_id as scenicId,
        t.state,
        t.category,
        t.line_price as linePrice,
        t.sale_price as salePrice,
        t.advance_day as advanceDay,
        t.quota,
        t.start_date as startDate,
        t.end_date as endDate,
        t.stock,
        t.verification_type as verificationType,
        t.refund_type as refundType,
        t.real_buy as realBuy,
        r.scenic_name as scenicName
        from scenic_ticket t
        left join scenic r on t.scenic_id = r.id
        where t.deleted = false and r.merchant_id = #{param.merchantId}
        <if test="param.scenicId != null">
            and t.scenic_id = #{param.scenicId}
        </if>
        <if test="param.category != null">
            and t.category = #{param.category}
        </if>
        <if test="param.state != null">
            and t.state = #{param.state}
        </if>
        <if test="param.queryName != null and param.queryName != ''">
            and t.title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler} ,'%')
        </if>
        order by t.id desc
    </select>

    <select id="getTicketList" resultType="com.eghm.vo.business.scenic.ticket.TicketBaseVO">
        select
        id,
        title,
        stock,
        line_price as linePrice,
        sale_price as salePrice
        from scenic_ticket where deleted = false and end_date &gt; now()
        and scenic_id = #{scenicId} order by id desc
    </select>

    <update id="updateStock" >
        update scenic_ticket set stock = stock + #{num}, sale_num = sale_num - #{num}, total_num = total_num - #{num}
        where id = #{id} and stock + #{num} &gt;= 0 and deleted = false
    </update>
    
    <select id="calcPrice" resultType="com.eghm.vo.business.scenic.ticket.TicketPriceVO">
        select IFNULL(min(sale_price),0) as minPrice, IFNULL(max(sale_price),0) as maxPrice from scenic_ticket where scenic_id = #{scenicId} and deleted = false
    </select>
</mapper>
