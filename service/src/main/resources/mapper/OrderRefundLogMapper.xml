<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eghm.mapper.OrderRefundLogMapper">

    <select id="getTotalRefundNum" resultType="int">
        select ifnull(sum(num), 0) from order_refund_log where deleted = false and order_no = #{orderNo} and `state` in (0, 1)
        <if test="productOrderId != null">
            item_order_id = #{itemOrderId}
        </if>
    </select>

    <select id="getRefundSuccessNum" resultType="int">
        select ifnull(sum(num), 0) from order_refund_log where deleted = false and order_no = #{orderNo} and `state` = 1
        <if test="productOrderId != null">
            item_order_id = #{itemOrderId}
        </if>
    </select>
    
    <select id="getRefundProcess" resultType="com.eghm.dto.ext.OrderRefund">
        select
             t.out_refund_no as outRefundNo,
             r.out_trade_no as outTradeNo,
             r.order_no as orderNo
        from
        order_refund_log t
        inner join `order` r on t.order_no = r.order_no
        where t.deleted = false and t.state = 0
    </select>

    <select id="getByPage" resultType="com.eghm.vo.order.refund.RefundLogResponse">
        select
            t.id,
            r.title,
            r.cover_url as coverUrl,
            t.order_no as orderNo
            t.num,
            t.apply_amount as applyAmount
            t.reason,
            t.state,
            t.audit_state as auditState,
            t.apply_time as applyTime
        from
        order_refund_log t
        inner join `order` r on t.order_no = r.order_no
        where t.deleted = false and r.deleted = false
        <if test="param.queryName != null and param.queryName != ''">
            and (t.order_no like concat('%', #{param.queryName}, '%') or r.title like concat('%', #{param.queryName} ,'%'))
        </if>
        <if test="param.state != null">
            and t.state = #{param.state}
        </if>
        <if test="param.auditState != null">
            and t.audit_state = #{param.auditState}
        </if>
        <if test="param.startTime != null">
            and t.apply_time &gt;= #{param.startTime}
        </if>
        <if test="param.endTime != null">
            and t.apply_time &lt;= #{param.endTime}
        </if>
    </select>

</mapper>
