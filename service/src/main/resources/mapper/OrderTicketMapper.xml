<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eghm.mapper.TicketOrderMapper">

    <select id="getByPage" parameterType="com.eghm.dto.business.order.ticket.TicketOrderQueryRequest" resultType="com.eghm.vo.business.order.ticket.TicketOrderResponse">
        select
            t.order_no as orderNo,
            r.title,
            t.scenic_name as scenicName,
            r.pay_type as payType,
            r.num,
            t.mobile,
            r.state,
            r.pay_amount as payAmount,
            r.pay_time as payTime,
            r.create_time as createTime
        from ticket_order t inner join `order` r on t.order_no = r.order_no
        where t.deleted = false
        <if test="param.queryName != null and param.queryName != '' ">
            and (t.order_no like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler}, '%') or
                 r.title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler}, '%'))
        </if>
        <if test="param.scenicName != null and param.scenicName != '' ">
            and t.scenic_name like concat('%', #{param.scenicName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler}, '%')
        </if>
        <if test="param.mobile != null and param.mobile != '' ">
            and t.mobile like concat('%', #{param.mobile, typeHandler=com.eghm.handler.mysql.LikeTypeHandler}, '%')
        </if>
        <if test="param.orderState != null">
            and r.state = #{param.orderState}
        </if>
        order by t.id desc
    </select>
    <select id="getList" parameterType="com.eghm.dto.business.order.ticket.TicketOrderQueryDTO" resultType="com.eghm.vo.business.order.ticket.TicketOrderVO">
        select
            t.order_no as orderNo,
            r.cover_url as coverUrl,
            r.title,
            t.scenic_name as scenicName,
            r.pay_type as payType,
            r.num,
            r.state,
            r.pay_amount as payAmount
        from `order` r
            inner join ticket_order t on t.order_no = r.order_no
        where t.deleted = false and r.member_id = #{param.memberId}
        <if test="param.queryName != null and param.queryName != ''">
            and (r.title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler}, '%') or
            t.scenic_name like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler}, '%'))
        </if>
        <if test="param.orderState != null">
            and r.state = #{param.orderState}
        </if>
        order by t.id desc
    </select>

    <select id="getDetail" resultType="com.eghm.vo.business.order.ticket.TicketOrderDetailVO">
        select
            t.order_no as orderNo,
            r.cover_url as coverUrl,
            r.title,
            t.scenic_id as scenicId,
            t.scenic_name as scenicName,
            t.category,
            r.pay_type as payType,
            r.num,
            r.refund_type as refundType,
            r.refund_state as refundState,
            r.price,
            r.discount_amount as discountAmount,
            r.pay_amount as payAmount,
            r.create_time as createTime,
            r.pay_time as payTime,
            r.complete_time as completeTime,
            t.visit_date as visitDate,
            t.mobile,
            r.state,
            r.remark
        from `order` r
        inner join ticket_order t on t.order_no = r.order_no
        where t.deleted = false and r.member_id = #{memberId} and r.order_no = #{orderNo}
    </select>

    <select id="getSnapshot" resultType="com.eghm.vo.business.order.ProductSnapshotVO">
        select
        t.title as productTitle,
        t.cover_url as productCover,
        r.ticket_id as productId
        from ticket_order r inner join `order` t on t.order_no = r.order_no
        where t.id = #{orderId} and t.order_no = #{orderNo} and t.deleted = false
    </select>

    <select id="getUnVerifyList" resultType="com.eghm.vo.business.order.ticket.TicketVerifyVO">
        select
            t.order_no as orderNo,
            t.merchant_id as merchantId
        from ticket_order r
        inner join `order` t on t.order_no = r.order_no
        where t.deleted = false and r.deleted = false and t.state = 2 and r.verification_type = 2 and r.visit_date &lt; curdate()
    </select>

    <select id="detailByOrderNo" resultType="com.eghm.vo.business.order.ticket.TicketOrderDetailResponse">
        select
            t.order_no,
            r.cover_url,
            r.title,
            t.scenic_id,
            t.scenic_name,
            t.category,
            r.out_trade_no,
            t.verification_type,
            t.visit_date,
            r.pay_type,
            r.num,
            r.refund_type,
            r.refund_state,
            r.price,
            r.discount_amount,
            r.pay_amount,
            r.create_time,
            r.pay_time,
            r.complete_time,
            t.mobile,
            r.state,
            r.refund_state,
            r.close_time,
            r.close_type,
            t.use_time,
            t.real_buy,
            r.remark
        from `order` r
        inner join ticket_order t on t.order_no = r.order_no
        where t.deleted = false and r.order_no = #{orderNo}
    </select>

</mapper>
