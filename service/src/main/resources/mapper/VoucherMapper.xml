<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eghm.mapper.VoucherMapper">

    <select id="listPage" resultType="com.eghm.vo.business.restaurant.VoucherResponse" parameterType="com.eghm.dto.business.restaurant.voucher.VoucherQueryRequest">
        select
        t.title,
        r.title as restaurant_name,
        t.state,
        t.hot_sell,
        t.sale_price,
        t.sale_num,
        t.score,
        t.quota,
        t.depict,
        t.create_time
        from voucher t left join restaurant r on t.restaurant_id = r.id
        where t.deleted = false
        <if test="param.queryName != null and param.queryName != ''">
            and t.title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler}, '%')
        </if>
        <if test="param.merchantId != null">
            and t.merchant_id = #{param.merchantId}
        </if>
        <if test="param.state != null">
            and t.state = #{param.state}
        </if>
        <if test="param.restaurantId != null">
            and t.restaurant_id = #{param.restaurantId}
        </if>
    </select>

    <update id="updateStock">
        update voucher set stock = stock + #{num}, sale_num = sale_num - #{num}, total_num = total_num - #{num}
        where id = #{id} and deleted = false and stock + #{num} &gt;= 0
    </update>

    <select id="getList" resultType="com.eghm.vo.business.restaurant.VoucherVO" parameterType="com.eghm.dto.business.restaurant.voucher.VoucherQueryDTO">
        select
        id,
        title,
        cover_url,
        hot_sell,
        line_price,
        sale_price,
        stock,
        total_num
        from voucher where state = 1 and deleted = false and restaurant_id = #{param.restaurantId}
        <if test="param.queryName != null and param.queryName != ''">
            and title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler}, '%')
        </if>
        <choose>
            <when test="param.sortByPrice == 1">
                order by sale_price, id desc
            </when>
            <when test="param.sortByPrice == 2">
                order by sale_price desc, id desc
            </when>
            <when test="param.sortBySale == 1">
                order by total_num, id desc
            </when>
            <otherwise>
                order by total_num desc, id desc
            </otherwise>
        </choose>
    </select>

    <update id="updateScore">
        update voucher set score = #{score} where id = #{id}
    </update>

    <select id="dayAppend" parameterType="com.eghm.dto.statistics.ProductRequest"  resultType="com.eghm.vo.business.statistics.ProductStatisticsVO">
        select
        create_date as createDate,
        sum(id) as appendNum
        from voucher
        where create_date &gt;= #{startDate} and create_date &lt;= #{endDate} and deleted = false
        <if test="merchantId != null">
            and merchant_id = #{merchantId}
        </if>
        group by create_date
    </select>

    <select id="getProductPage" parameterType="com.eghm.dto.business.base.BaseProductQueryRequest" resultType="com.eghm.vo.business.base.BaseProductResponse">
        select
        t.id,
        t.title,
        t.cover_url,
        'restaurant' as productType,
        t.state,
        r.title as storeName
        from voucher t inner join restaurant r on t.restaurant_id = r.id
        where t.deleted = false
        <if test="param.queryName != null and param.queryName != ''">
            and (t.title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler} ,'%')
            or r.title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler} ,'%'))
        </if>
        <if test="param.state != null">
            and t.state = #{param.state}
        </if>
        <if test="param.merchantId != null">
            and t.merchant_id = #{param.merchantId}
        </if>
        order by t.id desc
    </select>

</mapper>
