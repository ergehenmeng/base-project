<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eghm.mapper.ItemMapper">
    
    <select id="listPage" resultType="com.eghm.vo.business.item.ItemListResponse" parameterType="com.eghm.dto.business.item.ItemQueryRequest">
        select
        t.id,
        t.store_id as storeId,
        t.title,
        r.title as shopName,
        t.sale_num as saleNum,
        t.state,
        t.platform_state as platformState,
        t.quota,
        t.delivery_type as deliveryType,
        t.refund_type as refundType,
        t.max_price as maxPrice,
        t.min_price as minPrice,
        t.create_time as createTime,
        t.update_time as updateTime
        from item t left join item_store r on t.store_id = r.id
        where t.deleted = false
        <if test="param.queryName != null and param.queryName != ''">
            and (t.title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler} ,'%')  or r.title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler} ,'%'))
        </if>
        <if test="param.tagId != null and param.tagId != ''">
            and t.tag_id like concat(#{param.tagId} ,'%')
        </if>
        <if test="param.deliveryType != null ">
            and t.delivery_type = #{param.deliveryType}
        </if>
        <if test="param.state != null">
            and t.state = #{param.state}
        </if>
        <if test="param.platformState != null">
            and t.platform_state = #{param.platformState}
        </if>
        <if test="param.storeId != null">
            and t.store_id = #{param.storeId}
        </if>
        <if test="param.merchantId != null">
            and t.merchant_id = #{param.merchantId}
        </if>
        order by t.id desc
    </select>
    
    <select id="getPriorityItem" resultType="com.eghm.vo.business.item.ItemListVO">
        select
        id,
        title,
        cover_url as coverUrl,
        sale_num as saleNum,
        min_price as minPrice
        from item where deleted = false and state = 1 and platform_state = 2
        <if test="shopId != null">
            and store_id = #{shopId}
        </if>
        order by min_price &gt; 0, sort_by, id limit #{limit}
    </select>
    
    <select id="getRecommendItem" resultType="com.eghm.vo.business.item.ItemListVO">
        select
            id,
            title,
            cover_url as coverUrl,
            sale_num as saleNum,
            min_price as minPrice
        from item where deleted = false and state = 1 and platform_state = 2
        order by min_price &gt; 0, recommend desc, id limit #{limit}
    </select>
    
    <select id="getByPage" parameterType="com.eghm.dto.business.item.ItemQueryDTO" resultType="com.eghm.vo.business.item.ItemListVO">
        select
        id,
        title,
        cover_url as coverUrl,
        sale_num as saleNum,
        min_price as minPrice
        from item where deleted = false and state = 1 and platform_state = 2 and min_price &gt; 0
        <if test="param.queryName != null and param.queryName != ''">
            and title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler} ,'%')
        </if>
        <if test="param.tagId != null and param.tagId != ''">
            tag_id like concat(#{param.tagId} ,'%')
        </if>
        <if test="param.deliveryType != null">
            and delivery_type = #{param.deliveryType}
        </if>
        <if test="param.sortBy != null">
            <choose>
                <when test="param.sortBy == 1">
                    order by min_price, recommend desc
                </when>
                <when test="param.sortBy == 2">
                    order by total_num desc, recommend desc
                </when>
                <otherwise>
                    order by recommend desc
                </otherwise>
            </choose>
        </if>
    </select>
    
    <select id="getCouponScopeByPage" parameterType="com.eghm.dto.business.item.ItemCouponQueryDTO" resultType="com.eghm.vo.business.item.ItemListVO">
        select
        t.id,
        t.title,
        t.cover_url as coverUrl,
        t.sale_num as saleNum,
        t.min_price as minPrice
        from item t where t.deleted = false and t.state = 1 and t.platform_state = 2 and t.min_price &gt; 0
        and t.store_id = #{storeId}
        <if test="param.useScope == 2">
            and exists (select 1 from coupon_item r where t.id  = r.product_id and r.coupon_config_id = #{couponId} )
        </if>
        <if test="param.tagId != null and param.tagId != ''">
            t.tag_id like concat(#{param.tagId} ,'%')
        </if>
        <if test="param.useScope == 1">
            and t.store_id = #{storeId}
        </if>
        <if test="param.queryName != null and param.queryName != ''">
            and t.title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler} ,'%')
        </if>
        <if test="param.deliveryType != null">
            and t.delivery_type = #{param.deliveryType}
        </if>
        <if test="param.sortBy != null">
            <choose>
                <when test="param.sortBy == 1">
                    order by t.min_price, t.recommend desc
                </when>
                <when test="param.sortBy == 2">
                    order by t.total_num desc, t.recommend desc
                </when>
                <otherwise>
                    order by t.recommend desc
                </otherwise>
            </choose>
        </if>
    </select>
    
    <update id="updateSaleNum" >
        update item set sale_num = sale_num + #{num}, total_num = total_num + #{num} where id = #{id}
    </update>
    
    <update id="updateSaleNumByOrderNo">
        update item t, item_order r set t.sale_num = t.sale_num + r.num, t.total_num = t.total_num + r.num
        where t.id = r.item_id and r.order_no = #{orderNo}
    </update>
    
</mapper>
