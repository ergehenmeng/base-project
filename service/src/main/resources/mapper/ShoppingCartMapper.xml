<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eghm.mapper.ShoppingCartMapper">

    <select id="getByPage" resultType="com.eghm.vo.business.shopping.ShoppingCartResponse" parameterType="com.eghm.dto.business.shopping.ShoppingCartQueryRequest">
        select
        t.id as itemId,
        t.title,
        t.cover_url,
        t.min_price,
        t.max_price,
        t.hot_sell,
        t.state,
        t.sale_num,
        s.quantity
        from item t
        inner join (select item_id, sum(quantity) as quantity from shopping_cart where deleted = false group by item_id) s on t.id = s.item_id
        where t.deleted = false
        <if test="param.queryName != null and param.queryName != '' ">
            and t.title like concat('%', #{param.queryName, typeHandler=com.eghm.handler.mysql.LikeTypeHandler}, '%')
        </if>
        <if test="param.merchantId != null">
            and t.merchant_id = #{param.merchantId}
        </if>
        <if test="param.hotSell != null ">
            and t.hot_sell = #{param.hotSell}
        </if>
        <if test="param.state != null ">
            and t.state = #{param.state}
        </if>
        <if test="param.minPrice != null">
            and t.min_price &gt;= #{param.minPrice}
        </if>
        <if test="param.maxPrice != null">
            and t.min_price &lt;= #{param.maxPrice}
        </if>
        order by s.quantity desc
    </select>

    <select id="getList" resultType="com.eghm.vo.business.shopping.ShoppingCartItemVO">
        select
        t.id,
        t.store_id,
        m.title as storeTitle,
        r.cover_url,
        r.title,
        t.quantity,
        ps.sale_price,
        t.sale_price as rawSalePrice,
        r.quota,
        if(second_spec_value is null, concat(ps.primary_spec_value, '-', ps.second_spec_value), ps.primary_spec_value) as skuName,
        ps.stock,
        ps.deleted as skuState,
        r.state as productState
        from shopping_cart t
        left join item_store m on t.store_id = m.id
        left join item r on t.item_id = r.id
        left join item_sku ps on t.sku_id = ps.id
        where t.deleted = false and t.member_id = #{memberId} order by t.id desc
    </select>

    <select id="dayCart" parameterType="com.eghm.dto.statistics.DateRequest" resultType="com.eghm.vo.business.statistics.CartStatisticsVO">
        select
            count(id) as cartNum,
            create_date
        from shopping_cart where deleted = false and create_time &gt;= #{startDate} and create_time &lt; #{endDate}
        <if test="merchantId != null">
            and merchant_id = #{merchantId}
        </if>
        group by create_date
    </select>

</mapper>
