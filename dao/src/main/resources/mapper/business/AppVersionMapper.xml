<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eghm.dao.mapper.business.AppVersionMapper">
  <resultMap id="BaseResultMap" type="com.eghm.dao.model.business.AppVersion">
    <!--
      @create by mybatis
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="classify" jdbcType="CHAR" property="classify" />
    <result column="version" jdbcType="CHAR" property="version" />
    <result column="force_update" jdbcType="BIT" property="forceUpdate" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="BaseColumnList">
    <!--
      @create by mybatis
    -->
    id, classify, version, force_update, url, add_time, remark, deleted,update_time,state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      @create by mybatis
    -->
    select 
    <include refid="BaseColumnList" />
    from app_version
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insertSelective" parameterType="com.eghm.dao.model.business.AppVersion">
    <!--
      @create by mybatis
    -->
    insert into app_version
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="classify != null">
        classify,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="forceUpdate != null">
        force_update,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
        <if test="state != null">
            state,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classify != null">
        #{classify,jdbcType=CHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=CHAR},
      </if>
      <if test="forceUpdate != null">
        #{forceUpdate,jdbcType=BIT},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
        <if test="state != null">
            #{state,jdbcType=TINYINT},
        </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eghm.dao.model.business.AppVersion">
    <!--
      @create by mybatis
    -->
    update app_version
    <set>
      <if test="classify != null">
        classify = #{classify,jdbcType=CHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=CHAR},
      </if>
      <if test="forceUpdate != null">
        force_update = #{forceUpdate,jdbcType=BIT},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
        <if test="state != null">
            state = #{state,jdbcType=TINYINT},
        </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="getList" parameterType="com.eghm.model.dto.business.version.VersionQueryRequest" resultMap="BaseResultMap">
        select <include refid="BaseColumnList"/>
        from app_version
        <where>
            <if test="queryName != null and queryName != ''">
                and version like concat('%',#{queryName},'%')
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            <if test="classify != null and classify != ''">
                and classify = #{classify}
            </if>
        </where>
    </select>

    <select id="getLatestVersion" resultMap="BaseResultMap">
        select <include refid="BaseColumnList"/>
        from app_version where classify = #{classify} and deleted = false and state = 1 order by update_time limit 1
    </select>

    <select id="getVersion" resultMap="BaseResultMap">
        select <include refid="BaseColumnList"/>
        from app_version where classify = #{classify} and deleted = false and state = 1 and version = #{version} limit 1
    </select>

    <select id="getForceUpdateVersion" resultMap="BaseResultMap">
        select <include refid="BaseColumnList"/>
        from app_version where classify = #{classify} and deleted = false and state = 1 and force_update = true and add_time &gt; #{startTime} and add_time &lt;  #{endTime}
    </select>
</mapper>