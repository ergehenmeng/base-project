# =  进行普通字符精确匹配，完全匹配
# ^~ 进行普通字符匹配，当前表示前缀匹配
# ~\~* 表示执行一个正则匹配()
worker_processes auto;
error_log /usr/local/nginx/log/error.log;
pid /usr/local/nginx/nginx.pid;

events {
    worker_connections 1024;
}

# http全局配置
http {
    # 请求日志输出
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /usr/local/nginx/log/access.log  main;
    # 开启 tcp_nopush 提高网络包传输效率
    sendfile            on;
    # 类似于Channel.write,积累到一定程度后进行flush
    tcp_nopush          on;
    # 类似于Channel.writeFlush,与tcp_nopush相反
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    #隐藏版本号
    server_tokens  off;
    default_type        application/octet-stream;
    # 开启gzip
    gzip on;
    # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
    gzip_min_length 1k;
    # gzip 压缩级别，1-10，数字越大压缩的越好，也越占用CPU时间
    gzip_comp_level 3;
    # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
    gzip_types font/ttf font/otf image/svg+xml text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/json image/jpeg image/gif image/png;
    gzip_vary on;
    # 禁用IE 6 gzip
    gzip_disable "MSIE [1-6]\.";

    # server全量配置
    server {
        listen       80 default_server;
        server_name  manage.eghm.top;
        root         /usr/local/nginx/html;
        charset utf-8;

        location /manage {
            proxy_pass http://localhost:8080/;
            proxy_redirect default;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_connect_timeout 30;
            proxy_send_timeout 60;
            proxy_read_timeout 30;
            proxy_buffer_size 32k;
            proxy_buffering on;
            proxy_buffers 4 128k;
        }

        location ~.*\.(gif|jpeg|jpg|png)$ {
            root /data/resources/;
        }

        error_page 404 /404.html;

        location = /40x.html {

        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {

        }
    }

    upstream webapp {
        hash $request_uri;
        server localhost:8080;
        server localhost:8081;
    }
    server {
        listen 80;
        server_name webapp.eghm.top;
        location / {
            proxy_set_header       Host $host;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_pass webapp;
        }
    }

    # 其他模块依赖
    include /usr/local/nginx/modules/*.conf;

}

